import { useState, useEffect, useRef } from 'react';
import { Transition } from '@headlessui/react';

export default function PlatformInside() {
  const [selectedCell, setSelectedCell] = useState(null);
  const containerRef = useRef();

  const data = [
    { title: 'Scalable Infrastructure', text: 'A scalable infrastructure that can handle the large volumes of data generated by crowdsourced sensors.​' },
    { title: 'Automated Report Tool', text: 'An automated report tool that generates reports with the information you consider relevant​.' },
    { title: 'Cloud-hosted Framework', text: 'A cloud-hosted distributed computing framework​.' },
    { title: 'Machine Learning Models', text: 'Machine learning models that help you make better decisions, faster.​' },
    { title: 'Common Architecture', text: 'A common architecture that can be extended to any geospatial application​​.' },
    { title: 'Image Processing', text: 'Image processing, object detection, image segmentation, and classification​.​' },
  ];

  useEffect(() => {
    const handleClickOutside = (event) => {
      if (containerRef.current && !containerRef.current.contains(event.target)) {
        setSelectedCell(null);
      }
    };

    // Bind the event listener
    document.addEventListener('mousedown', handleClickOutside);
    return () => {
      // Unbind the event listener on clean up
      document.removeEventListener('mousedown', handleClickOutside);
    };
  }, []);

  return (
    <div className="space-y-8 pb-8">
      <h1 className="text-4xl font-semibold text-left text-teal-500 mt-20">
        <span className="text-gradient">Explore </span>
        <span className="text-gradient">Our </span>
        <span className="text-gradient">Features </span>  
      </h1>
      <div ref={containerRef} className="grid grid-cols-3 gap-8 p-2">
        {data.map((item, index) => (
          <div
            key={index}
            className={`p-8 border border-gray-300 rounded-lg cursor-pointer transition-all duration-200 
                        transform hover:scale-105 ${selectedCell === index ? 'bg-black' : 'bg-gradient-to-l from-teal-400 via-teal-500 to-teal-600 rounded-lg'}`}
            onClick={(event) => {
              event.stopPropagation();
              setSelectedCell(index);
            }}
          >
            <h2 className="text-lg font-semibold text-white">{item.title}</h2>
            <Transition
              show={selectedCell === index}
              enter="transition-opacity duration-300"
              enterFrom="opacity-0"
              enterTo="opacity-100"
              leave="transition-opacity duration-300"
              leaveFrom="opacity-100"
              leaveTo="opacity-0"
            >
              <p className="mt-2 text-white">{item.text}</p>
            </Transition>
          </div>
        ))}
      </div>
    </div>
  );
}
